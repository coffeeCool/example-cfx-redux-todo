// Generated by CoffeeScript 1.10.0
var checkStatus, echo;

echo = function() {
  return console.log(arguments);
};

checkStatus = function(res) {
  var error;
  if (res.status >= 200 && res.status < 300) {
    return res;
  } else {
    error = new Error(res.statusText);
    error.response = res;
    throw error;
  }
};

module.exports = function(fetchFun, url) {
  return {
    fetch: function() {
      var promise;
      promise = fetchFun(url.todos);
      return promise.then(function(res) {
        return checkStatus(res);
      }).then(function(res) {
        return res.json();
      })["catch"](function(ex) {
        throw new Error(ex);
      });
    },
    create: function(todo) {
      var promise;
      promise = fetchFun(url.todos, {
        method: 'POST',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(todo)
      });
      return promise.then(function(res) {
        return checkStatus(res);
      }).then(function(res) {
        return res.json();
      })["catch"](function(ex) {
        throw new Error(ex);
      });
    },
    update: function(newTodo) {
      var promise;
      promise = fetchFun(url.todos + "/" + newTodo.id, {
        method: 'PATCH',
        headers: {
          Accept: 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(newTodo)
      });
      return promise.then(function(res) {
        return checkStatus(res);
      }).then(function(res) {
        return res.json();
      })["catch"](function(ex) {
        throw new Error(ex);
      });
    },
    "delete": function(todoId) {
      var promise;
      promise = fetchFun(url.todos + "/" + todoId, {
        method: 'DELETE'
      });
      return promise.then(function(res) {
        return checkStatus(res);
      }).then(function(res) {
        return res.json();
      })["catch"](function(ex) {
        throw new Error(ex);
      });
    }
  };
};
